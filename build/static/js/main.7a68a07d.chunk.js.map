{"version":3,"sources":["MusicPlayerContext.js","TrackList.js","components/Canvas.js","App.js","serviceWorker.js","index.js"],"names":["MusicPlayerContext","React","createContext","MusicPlayerProvider","props","useState","isLoaded","value","tracks","name","url","image","state","setState","Provider","children","Tracklist","fft","useRef","player","buffer","useContext","RAF","useEffect","calcProgress","totalProgress","i","Buffer","_downloadQueue","length","progress","current","FFT","on","Player","console","log","fan","toMaster","loadingProgress","loop","requestAnimationFrame","getValue","cancelAnimationFrame","handleClick","start","map","track","className","style","disabled","onClick","icon","faPlay","Canvas","cnvRef","ctx","arrayLength","canvas","document","querySelector","width","size","height","getContext","gradient","createLinearGradient","addColorStop","save","restore","beginPath","strokeStyle","lineWidth","setLineDash","lineDashOffset","lineCap","setTransform","index","x","scaleLinear","domain","range","y","moveTo","lineTo","stroke","ref","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a68a07d.chunk.js","sourcesContent":["import React, { useState } from 'react'\nconst MusicPlayerContext = React.createContext([{}, () => {}])\n\nconst MusicPlayerProvider = (props) => {\n\tconst [state, setState] = useState({\n\t\tisLoaded: false,\n\t\tvalue: [],\n\t\ttracks: [\n\t\t\t{\n\t\t\t\tname: 'Go For Landing',\n\t\t\t\turl:\n\t\t\t\t\t'https://res.cloudinary.com/makingthings/video/upload/v1576483365/mp3/jg_bd_2018.mp3',\n\t\t\t\timage:\n\t\t\t\t\t'https://res.cloudinary.com/makingthings/image/upload/v1579080574/mp3/photo-1446941611757-91d2c3bd3d45.jpg'\n\t\t\t}\n\t\t]\n\t})\n\treturn (\n\t\t<MusicPlayerContext.Provider value={[state, setState]}>\n\t\t\t{props.children}\n\t\t</MusicPlayerContext.Provider>\n\t)\n}\n\nexport { MusicPlayerProvider, MusicPlayerContext }\n","import React, { useContext, useRef, useEffect } from 'react'\nimport { MusicPlayerContext } from './MusicPlayerContext'\nimport { Player, Buffer, FFT } from 'tone'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay, faPause } from '@fortawesome/free-solid-svg-icons'\n\nconst Tracklist = (props) => {\n\tconst fft = useRef(null)\n\tconst player = useRef(null)\n\tconst buffer = useRef(null)\n\tconst [state, setState] = useContext(MusicPlayerContext)\n\tconst RAF = useRef(null)\n\tuseEffect(() => {\n\t\tfft.current = new FFT(256)\n\t\tbuffer.current = new Buffer(state.tracks[0].url)\n\t\tBuffer.on('load', () => {\n\t\t\tplayer.current = new Player(buffer.current)\n\t\t\tconsole.log(player)\n\t\t\tplayer.current.fan(fft.current).toMaster()\n\t\t\tsetState((state) => ({ ...state, isLoaded: true }))\n\t\t})\n\t\tBuffer.on('progress', () =>\n\t\t\tsetState((state) => ({ ...state, loadingProgress: calcProgress() }))\n\t\t)\n\t\tfunction calcProgress() {\n\t\t\tlet totalProgress = 0\n\t\t\tfor (var i = 0; i < Buffer._downloadQueue.length; i++) {\n\t\t\t\ttotalProgress += Buffer._downloadQueue[i].progress\n\t\t\t}\n\t\t\treturn totalProgress / Buffer._downloadQueue.length\n\t\t}\n\t\tconst loop = () => {\n\t\t\tRAF.current = requestAnimationFrame(loop)\n\t\t\tconst value = fft.current.getValue()\n\t\t\tsetState((state) => ({ ...state, value: value }))\n\t\t}\n\n\t\tloop()\n\n\t\treturn () => cancelAnimationFrame(RAF.current)\n\t}, [])\n\n\tconsole.log(state.value)\n\tconsole.log(state.isLoaded)\n\tconst handleClick = () => {\n\t\tplayer.current.start()\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{state.tracks.map((track) => (\n\t\t\t\t<div className='box' style={{ '--loader': state.loadingProgress }}>\n\t\t\t\t\t<button\n\t\t\t\t\t\tdisabled={!state.isLoaded}\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t!state.isLoaded\n\t\t\t\t\t\t\t\t? 'button is-primary is-loading'\n\t\t\t\t\t\t\t\t: 'button is-primary'\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonClick={handleClick}>\n\t\t\t\t\t\t<FontAwesomeIcon icon={faPlay} />\n\t\t\t\t\t</button>\n\t\t\t\t\t<div className='song-title'>{track.name}</div>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</>\n\t)\n}\n\nexport default Tracklist\n","import React, { useContext, useRef, useEffect } from 'react'\nimport { MusicPlayerContext } from '../MusicPlayerContext'\nimport { scaleLinear } from 'd3'\nimport './canvas.scss'\nconst Canvas = (props) => {\n\tconst cnvRef = useRef()\n\tconst ctx = useRef()\n\n\tconst [state, setState] = useContext(MusicPlayerContext)\n\n\tuseEffect(() => {\n\t\tconst lineWidth = 50\n\t\tconst arrayLength = state.value.length\n\n\t\tconst size = 500\n\t\tconst canvas = document.querySelector('canvas')\n\t\tcanvas.width = size * 2\n\t\tcanvas.height = size\n\n\t\tctx.current = cnvRef.current.getContext('2d')\n\t\tvar gradient = ctx.current.createLinearGradient(0, 0, 170, 0)\n\t\tgradient.addColorStop('0', 'magenta')\n\t\tgradient.addColorStop('0.5', 'blue')\n\t\tgradient.addColorStop('1.0', 'red')\n\n\t\tctx.current.save()\n\n\t\t// var img = new Image()\n\t\t// img.onload = function() {\n\t\t// \timg.naturalWidth = size\n\t\t// \timg.naturalHeight = size\n\t\t// \tctx.current.beginPath()\n\t\t// \tctx.current.rect(size / 2 - 50, size / 2 - 50, 100, 100)\n\t\t// \tvar items = 10\n\t\t// \tvar r = 200\n\n\t\t// \tctx.current.moveTo(size * 1.5 + r, size / 2)\n\t\t// \tfor (var i = 0; i < items; i++) {\n\t\t// \t\tvar x = size * 1.5 + r * Math.cos((2 * Math.PI * i) / items)\n\t\t// \t\tvar y = size / 2 + r * Math.sin((2 * Math.PI * i) / items)\n\t\t// \t\tctx.current.lineTo(x, y)\n\t\t// \t}\n\t\t// \tctx.current.closePath()\n\n\t\t// \tctx.current.clip()\n\t\t// \tctx.current.globalCompositeOperation = 'lighten'\n\t\t// \tctx.current.drawImage(img, 0, 0)\n\t\t// \tctx.current.arc(0, 0, 60, 0, Math.PI * 2, true)\n\t\t// }\n\n\t\t// img.src = `https://images.unsplash.com/photo-1524843496980-e84a553ed501?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=900&ixid=eyJhcHBfaWQiOjF9&ixlib=rb-1.2.1&q=80&w=900`\n\n\t\tctx.current.restore()\n\n\t\t//Save\n\t\tctx.current.save()\n\n\t\tctx.current.beginPath()\n\t\tctx.current.strokeStyle = gradient\n\t\tctx.current.lineWidth = lineWidth\n\n\t\tctx.current.setLineDash([0, 90])\n\t\tctx.current.lineDashOffset = 10\n\t\tctx.current.lineCap = 'round'\n\t\tctx.current.setTransform(1, 0, 0, 1, lineWidth / 2, 0)\n\t\tstate.value.map((value, index) => {\n\t\t\tconst x = scaleLinear()\n\t\t\t\t.domain([0, arrayLength / 2])\n\t\t\t\t.range([0, size])\n\t\t\tconst y = scaleLinear()\n\t\t\t\t.domain([0, size])\n\t\t\t\t.range([0, value * 10])\n\t\t\tctx.current.moveTo(x(index), size)\n\t\t\tconsole.log(y(value))\n\t\t\tctx.current.lineTo(x(index), y(value))\n\t\t})\n\n\t\tctx.current.stroke()\n\t\t// ctx.current.strokeStyle='hsla(224, 92%, 55%, 0.5)'\n\t\tctx.current.strokeStyle = 'hsla(224, 92%, 55%, 0.5)'\n\t\tctx.current.lineWidth = 3\n\n\t\tctx.current.setLineDash([30, 30])\n\t\tctx.current.lineDashOffset = 10\n\t\tctx.current.lineCap = 'square'\n\t\tctx.current.setTransform(1, 0, 0, 1, lineWidth / 2, 0)\n\t\tstate.value.map((value, index) => {\n\t\t\tconst x = scaleLinear()\n\t\t\t\t.domain([0, arrayLength])\n\t\t\t\t.range([0, size])\n\t\t\tconst y = scaleLinear()\n\t\t\t\t.domain([0, index])\n\t\t\t\t.range([0, size])\n\t\t\tctx.current.moveTo(x(index), size)\n\t\t\tconsole.log(y(value))\n\t\t\tctx.current.lineTo(x(index), y(value))\n\t\t})\n\n\t\tctx.current.stroke()\n\t\tctx.current.restore()\n\t})\n\n\treturn <canvas ref={cnvRef} />\n}\n\nexport default Canvas\n","import React, { useEffect, useState, useRef } from 'react'\nimport './App.css'\nimport Tracklist from './TrackList'\nimport { MusicPlayerProvider } from './MusicPlayerContext'\nimport { Player } from 'tone'\nimport Canvas from './components/Canvas'\nfunction App() {\n\tconst player = useRef(null)\n\n\t// useEffect(()=>{\n\t//   player.current =\n\t// })\n\n\treturn (\n\t\t<MusicPlayerProvider>\n\t\t\t<div className='container'>\n\t\t\t\t<div className='columns'>\n\t\t\t\t\t<div className='column is-one-quarter'></div>\n\t\t\t\t\t<div className='column is-three-quarters'>\n\t\t\t\t\t\t<Tracklist />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Canvas />\n\t\t\t</div>\n\t\t</MusicPlayerProvider>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}